{
"name" : "Japanese dictionary",
"url" : "https://play.google.com/store/apps/details?id=com.ndcsolution.jdict",
"package" : "com.ndcsolution.jdict",
"category" : "Education",
"description" : "JDict is a Japanese-English offline dictionary featuring over 160000 entries, over 10000 kanji and almost 60000 example sentences. It is largely inspired by well-known [Imi_wa?] dictionary for [i_O_S] platform both functionally and visually.   Current features: - works offline - shows kana/romaji as you type - supports wildcards in vocabulary - recent words, examples and kanji - romaji mode in search - kanji search is divided by ON/KUN readings, Nanori and meaning results - very fast example search - extract words from sentences feature - kanji stroke order animations - furigana is matched everywhere with my own algorithm (still can have some bugs though) - in component view, you can see all kanji with given component ordered by JLPT level and word commonness - in kanji view, you can see all compounds with given kanji ordered like above - search kanji by components (design inspired by Japanese dictionary) - browse kanji by JLPT and School Grades - notes - lists (works like favorites but with folders/sub-folders) - vocabulary search recognizes some basic grammar when typing - in word detail view examples are categorized by word meaning if such a connection exists   As you can see features are mostly basic for now. The database file is quite big (~230MB). The reason for that is that it contains a lot of example sentences data and needs a lot of indexes to run smooth.   My plans:  - make the application more user-friendly (list search) - learn vocabulary feature (using lists)  - exporting lists to Anki - external links in vocabulary - kanji handwriting recognition - Shiratori game - improve extract words algorithm (I have some ideas using the statistical approach to make it run faster)  Acknowledgments:  - Electronic Dictionaries Research Groups - KanjiVG - Tatoeba - KanjiCafe - Tanos (JLPT) ",
"desc_perms" : "['android.permission.WRITE_EXTERNAL_STORAGE', 'android.permission.INTERNET', 'android.permission.ACCESS_WIFI_STATE', 'android.permission.ACCESS_NETWORK_STATE', 'android.permission.READ_EXTERNAL_STORAGE']",
"manifest_perms" : "['android.permission.WRITE_EXTERNAL_STORAGE', 'com.google.android.providers.gsf.permission.READ_GSERVICES', 'android.permission.INTERNET', 'com.android.vending.CHECK_LICENSE', 'android.permission.ACCESS_WIFI_STATE', 'com.google.android.c2dm.permission.RECEIVE', 'android.permission.WRITE_SETTINGS', 'com.ndcsolution.jdict.permission.C2D_MESSAGE', 'android.permission.ACCESS_NETWORK_STATE', 'android.permission.READ_EXTERNAL_STORAGE', 'com.android.vending.BILLING', 'android.permission.WAKE_LOCK', 'android.permission.STORAGE']",
"perms_with_call" : "['android.permission.WAKE_LOCK', 'android.permission.GET_TASKS', 'android.permission.USE_FINGERPRINT', 'android.permission.ACCESS_WIFI_STATE', 'android.permission.ACCESS_COARSE_LOCATION', 'android.permission.BLUETOOTH', 'android.permission.ACCESS_NETWORK_STATE', 'android.permission.BROADCAST_STICKY', 'android.permission.ACCESS_FINE_LOCATION']" 
"extra_perms" : "['com.android.vending.CHECK_LICENSE', 'android.permission.ACCESS_COARSE_LOCATION', 'com.android.vending.BILLING', 'android.permission.ACCESS_FINE_LOCATION', 'android.permission.STORAGE']",
}